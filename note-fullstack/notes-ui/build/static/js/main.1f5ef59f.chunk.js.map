{"version":3,"sources":["components/Table.js","components/Content.js","App.js","reportWebVitals.js","index.js"],"names":["Table","Component","constructor","props","super","this","state","notes","notenumber","sortConfig","key","direction","err","isLoading","onSort","bind","componentDidMount","setState","fetch","then","res","status","Error","json","console","log","event","sortKey","sort","a","b","title","toString","localeCompare","noteversions","updatedAt","createdAt","NoteID","undefined","numeric","renderTableData","map","note","index","isDeleted","update","_jsxs","children","_jsx","Link","to","class","renderTableHeader","head","className","onClick","e","toUpperCase","render","id","Content","api_url","match","params","renderNoteContent","content","App","Router","Switch","Route","path","exact","component","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f5ef59f.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Table.css';\nimport { Link } from \"react-router-dom\";\n\nclass Table extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            notes: [],\n            notenumber:null,\n            sortConfig: {\n                key: null,\n                direction: null,\n            },\n            err: null,\n            isLoading: false\n        }\n        this.onSort = this.onSort.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({ isLoading: true })\n        let api_url = 'http://localhost:4006/notes';\n        fetch(api_url)\n            .then(res => {\n                if(res.status >= 400) {\n                    throw new Error(\"Server responds with error!\");\n                }\n                return res.json();\n            })\n            .then(notes => {\n                    this.setState({\n                        notes,\n                        isLoading: false\n                    })\n                    console.log(console.log(this.state.notes))\n                },\n                err => {\n                    this.setState({\n                        err,\n                        isLoading: false\n                    })\n                });\n    }\n\n    onSort(event, sortKey){\n        const notes = this.state.notes;\n        if(sortKey == 'title'){\n            if(this.state.sortConfig.key == sortKey && this.state.sortConfig.direction == \"ascending\"){\n                notes.sort((a, b) => b['noteversions'][0].title.toString().localeCompare(a.noteversions[0].title.toString()))\n                this.setState({sortConfig: {key: sortKey, direction: \"descending\"}})\n            }\n            else {\n                notes.sort((a, b) => a['noteversions'][0].title.toString().localeCompare(b.noteversions[0].title.toString()))\n                this.setState({sortConfig: {key: sortKey, direction: \"ascending\"}})\n            }\n        }\n\n        else if( sortKey === 'modified At'){\n            if(this.state.sortConfig.key == sortKey && this.state.sortConfig.direction == \"ascending\") {\n                notes.sort((a,b) => b.noteversions[0].updatedAt.toString().localeCompare(a.noteversions[0].updatedAt.toString()))\n                this.setState({sortConfig: {key: sortKey, direction: \"descending\"}})\n            }\n            else {\n                notes.sort((a, b) => a.noteversions[0].updatedAt.toString().localeCompare(b.noteversions[0].updatedAt.toString()))\n                this.setState({sortConfig: {key: sortKey, direction: \"ascending\"}})\n            }\n        }\n\n        else if( sortKey === 'created At') {\n            if(this.state.sortConfig.key == sortKey && this.state.sortConfig.direction == \"ascending\") {\n                notes.sort((a, b) => b.createdAt.toString().localeCompare(a.createdAt.toString()))\n                this.setState({sortConfig: {key: sortKey, direction: \"descending\"}})\n            }\n            else {\n                notes.sort((a, b) => a.createdAt.toString().localeCompare(b.createdAt.toString()))\n                this.setState({sortConfig: {key: sortKey, direction: \"ascending\"}})\n            }\n        }\n        else {\n            if(this.state.sortConfig.key == sortKey && this.state.sortConfig.direction == \"ascending\") {\n                notes.sort((a, b) => b.NoteID.toString().localeCompare(a.NoteID.toString(), undefined, {numeric: true}))\n                this.setState({sortConfig: {key: sortKey, direction: \"descending\"}})\n            }\n            else {\n                notes.sort((a, b) => a.NoteID.toString().localeCompare(b.NoteID.toString(), undefined, {numeric: true}))\n                this.setState({sortConfig: {key: sortKey, direction: \"ascending\"}})\n            }\n        }\n        this.setState({notes})\n    }\n\n\n    renderTableData() {\n        return this.state.notes.map((note, index) => {\n            const { NoteID, isDeleted, createdAt, noteversions } = note\n            let title = noteversions[0].title\n            let update = noteversions[0].updatedAt\n            return (\n                <tr key={NoteID}>\n                    <td>{NoteID}</td>\n                    <td><Link to={\"/content/\"+NoteID} class='link'>{title}</Link></td>\n                    <td>{createdAt}</td>\n                    <td>{update}</td>\n                </tr>\n            )\n        })\n    }\n\n\n\n    renderTableHeader() {\n        let heder = ['ID', 'title', 'created At', 'modified At']\n        return heder.map(head => {\n            return <th className='unselectable' key={head} onClick={e => this.onSort(e, head)}>{head.toUpperCase()}</th>\n        })\n    }\n\n\n    render() {\n        return (\n            <div class='return'>\n                <h1>List of Notes</h1>\n                    <table id='notes'>\n                        <tbody>\n                            <tr>{this.renderTableHeader()}</tr>\n                            {this.renderTableData()}\n                        </tbody>\n                    </table>\n                </div>\n        )\n    }\n}\n\nexport default Table","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\n\nclass Content extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            note: [],\n            notenumber:null,\n            err: null,\n            isLoading: false\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ isLoading: true })\n        let api_url = 'http://localhost:4006/notecontent?id='+this.props.match.params.id;\n        fetch(api_url)\n            .then(res => {\n                if(res.status >= 400) {\n                    throw new Error(\"Server responds with error!\");\n                }\n                return res.json();\n            })\n            .then(note => {\n                    this.setState({\n                        note,\n                        isLoading: false\n                    })\n\n                },\n                err => {\n                    this.setState({\n                        err,\n                        isLoading: false\n                    })\n                });\n    }\n\n\n\n\n    renderNoteContent() {\n        return this.state.note.map((note, index) => {\n            const { NoteID, createdAt, noteversions } = note //destructuring\n            let title = noteversions[0].title\n            let update = noteversions[0].updatedAt\n            let content = noteversions[0].content\n            return (\n                <div>\n                <table id='notes'>\n                    <tbody>\n\n                    <tr key={NoteID}>\n                        <th>{NoteID}</th>\n                        <th>{title}</th>\n                        <th>{createdAt}</th>\n                        <th>{update}</th>\n                    </tr>\n                    </tbody>\n                </table>\n                <div id='content'>\n                    <h1>{title}</h1>\n                    {content}\n                </div>\n                </div>\n            )\n        })\n\n    }\n\n    render() {\n\n        return (\n                <div class='return'>\n                    <Link class='link' to={\"/\"}><h1> Back to list</h1></Link>\n                    {this.renderNoteContent()}\n                </div>\n        )\n    }\n}\n\nexport default Content","import Table from \"./components/Table\";\nimport Content from \"./components/Content\";\nimport { BrowserRouter as Router, Route, Link,Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n      <Router>\n        <div className=\"App\">\n        </div>\n          <Switch>\n            <Route path=\"/\" exact component={Table} />\n            <Route path=\"/content/:id\"  component={Content} />\n          </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}